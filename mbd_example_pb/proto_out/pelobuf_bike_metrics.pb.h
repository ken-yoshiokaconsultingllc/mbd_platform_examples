/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PELOBUF_BIKE_METRICS_PB_H_INCLUDED
#define PB_PELOBUF_BIKE_METRICS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _RpmResponse_Direction { 
    RpmResponse_Direction_FORWARD = 1, 
    RpmResponse_Direction_BACKWARD = 2 
} RpmResponse_Direction;

/* Struct definitions */
typedef struct _EncoderDataRequest { 
    char dummy_field;
} EncoderDataRequest;

/* ////////////////////////////////
 LoadCellData Message
//////////////////////////////// */
typedef struct _LoadCellDataRequest { 
    char dummy_field;
} LoadCellDataRequest;

typedef struct _LoadCellReadingRequest { 
    char dummy_field;
} LoadCellReadingRequest;

typedef struct _PowerRequest { 
    char dummy_field;
} PowerRequest;

typedef struct _ResistanceDataRequest { 
    char dummy_field;
} ResistanceDataRequest;

typedef struct _ResistanceRequest { 
    char dummy_field;
} ResistanceRequest;

typedef struct _RpmRequest { 
    char dummy_field;
} RpmRequest;

typedef struct _StepperMotorDataRequest { 
    char dummy_field;
} StepperMotorDataRequest;

/* /////////////////////////
 WorkoutData Message
///////////////////////// */
typedef struct _WorkoutDataRequest { 
    char dummy_field;
} WorkoutDataRequest;

typedef struct _EncoderDataResponse { 
    bool has_angle;
    uint32_t angle; 
    bool has_applied_position_offset;
    int32_t applied_position_offset; 
} EncoderDataResponse;

typedef struct _LoadCellDataResponse { 
    bool has_valid;
    bool valid; 
    pb_size_t data_count;
    float data[10]; 
    bool has_offset;
    float offset; 
    bool has_zero_data;
    uint32_t zero_data; 
    bool has_cal_span;
    uint32_t cal_span; 
} LoadCellDataResponse;

typedef struct _LoadCellReadingResponse { 
    bool has_filtered_val;
    int32_t filtered_val; 
    bool has_table_valid;
    bool table_valid; 
} LoadCellReadingResponse;

typedef struct _PowerResponse { 
    bool has_current;
    uint32_t current; 
} PowerResponse;

typedef struct _ResistanceDataResponse { 
    bool has_offset;
    float offset; 
    bool has_position_offset;
    int32_t position_offset; 
    bool has_v1_eqivalent;
    uint32_t v1_eqivalent; 
} ResistanceDataResponse;

typedef struct _ResistanceResponse { 
    bool has_current;
    uint32_t current; 
    bool has_target;
    uint32_t target; 
} ResistanceResponse;

typedef struct _RpmResponse { 
    uint32_t rpm; 
    bool has_direction;
    RpmResponse_Direction direction; 
} RpmResponse;

typedef struct _StepperMotorDataResponse { 
    bool has_abs_pos;
    uint32_t abs_pos; 
    bool has_start;
    uint32_t start; 
    bool has_end;
    uint32_t end; 
    bool has_stall_threshold;
    uint32_t stall_threshold; 
} StepperMotorDataResponse;

typedef struct _WorkoutDataResponse { 
    bool has_rpm;
    RpmResponse rpm; 
    bool has_resistance;
    ResistanceResponse resistance; 
    bool has_power;
    PowerResponse power; 
} WorkoutDataResponse;

/* Top level container for all the messages in this module */
typedef struct _PelobufBikeMetrics { 
    pb_size_t which_id;
    union {
        WorkoutDataRequest workout_data_req;
        WorkoutDataResponse workout_data_resp;
        RpmRequest rpm_req;
        RpmResponse rpm_resp;
        ResistanceRequest resistance_req;
        ResistanceResponse resistance_resp;
        PowerRequest power_req;
        PowerResponse power_resp;
        LoadCellReadingRequest lc_reading_req;
        LoadCellReadingResponse lc_reading_resp;
        LoadCellDataRequest lc_data_req;
        LoadCellDataResponse lc_data_resp;
        StepperMotorDataRequest stepper_data_req;
        StepperMotorDataResponse stepper_data_resp;
        ResistanceDataRequest resistance_data_req;
        ResistanceDataResponse resistance_data_resp;
        EncoderDataRequest encoder_data_req;
        EncoderDataResponse encoder_data_resp;
    } id; 
} PelobufBikeMetrics;


/* Helper constants for enums */
#define _RpmResponse_Direction_MIN RpmResponse_Direction_FORWARD
#define _RpmResponse_Direction_MAX RpmResponse_Direction_BACKWARD
#define _RpmResponse_Direction_ARRAYSIZE ((RpmResponse_Direction)(RpmResponse_Direction_BACKWARD+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define PelobufBikeMetrics_init_default          {0, {WorkoutDataRequest_init_default}}
#define WorkoutDataRequest_init_default          {0}
#define WorkoutDataResponse_init_default         {false, RpmResponse_init_default, false, ResistanceResponse_init_default, false, PowerResponse_init_default}
#define RpmRequest_init_default                  {0}
#define RpmResponse_init_default                 {0, false, _RpmResponse_Direction_MIN}
#define ResistanceRequest_init_default           {0}
#define ResistanceResponse_init_default          {false, 0, false, 0}
#define PowerRequest_init_default                {0}
#define PowerResponse_init_default               {false, 0}
#define LoadCellReadingRequest_init_default      {0}
#define LoadCellReadingResponse_init_default     {false, 0, false, 0}
#define LoadCellDataRequest_init_default         {0}
#define LoadCellDataResponse_init_default        {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0, false, 0}
#define StepperMotorDataRequest_init_default     {0}
#define StepperMotorDataResponse_init_default    {false, 0, false, 0, false, 0, false, 0}
#define ResistanceDataRequest_init_default       {0}
#define ResistanceDataResponse_init_default      {false, 0, false, 0, false, 0}
#define EncoderDataRequest_init_default          {0}
#define EncoderDataResponse_init_default         {false, 0, false, 0}
#define PelobufBikeMetrics_init_zero             {0, {WorkoutDataRequest_init_zero}}
#define WorkoutDataRequest_init_zero             {0}
#define WorkoutDataResponse_init_zero            {false, RpmResponse_init_zero, false, ResistanceResponse_init_zero, false, PowerResponse_init_zero}
#define RpmRequest_init_zero                     {0}
#define RpmResponse_init_zero                    {0, false, _RpmResponse_Direction_MIN}
#define ResistanceRequest_init_zero              {0}
#define ResistanceResponse_init_zero             {false, 0, false, 0}
#define PowerRequest_init_zero                   {0}
#define PowerResponse_init_zero                  {false, 0}
#define LoadCellReadingRequest_init_zero         {0}
#define LoadCellReadingResponse_init_zero        {false, 0, false, 0}
#define LoadCellDataRequest_init_zero            {0}
#define LoadCellDataResponse_init_zero           {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0, false, 0}
#define StepperMotorDataRequest_init_zero        {0}
#define StepperMotorDataResponse_init_zero       {false, 0, false, 0, false, 0, false, 0}
#define ResistanceDataRequest_init_zero          {0}
#define ResistanceDataResponse_init_zero         {false, 0, false, 0, false, 0}
#define EncoderDataRequest_init_zero             {0}
#define EncoderDataResponse_init_zero            {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define EncoderDataResponse_angle_tag            1
#define EncoderDataResponse_applied_position_offset_tag 2
#define LoadCellDataResponse_valid_tag           1
#define LoadCellDataResponse_data_tag            2
#define LoadCellDataResponse_offset_tag          3
#define LoadCellDataResponse_zero_data_tag       4
#define LoadCellDataResponse_cal_span_tag        5
#define LoadCellReadingResponse_filtered_val_tag 1
#define LoadCellReadingResponse_table_valid_tag  2
#define PowerResponse_current_tag                1
#define ResistanceDataResponse_offset_tag        1
#define ResistanceDataResponse_position_offset_tag 2
#define ResistanceDataResponse_v1_eqivalent_tag  3
#define ResistanceResponse_current_tag           1
#define ResistanceResponse_target_tag            2
#define RpmResponse_rpm_tag                      1
#define RpmResponse_direction_tag                2
#define StepperMotorDataResponse_abs_pos_tag     1
#define StepperMotorDataResponse_start_tag       2
#define StepperMotorDataResponse_end_tag         3
#define StepperMotorDataResponse_stall_threshold_tag 4
#define WorkoutDataResponse_rpm_tag              1
#define WorkoutDataResponse_resistance_tag       2
#define WorkoutDataResponse_power_tag            3
#define PelobufBikeMetrics_workout_data_req_tag  2
#define PelobufBikeMetrics_workout_data_resp_tag 3
#define PelobufBikeMetrics_rpm_req_tag           4
#define PelobufBikeMetrics_rpm_resp_tag          5
#define PelobufBikeMetrics_resistance_req_tag    6
#define PelobufBikeMetrics_resistance_resp_tag   7
#define PelobufBikeMetrics_power_req_tag         8
#define PelobufBikeMetrics_power_resp_tag        9
#define PelobufBikeMetrics_lc_reading_req_tag    10
#define PelobufBikeMetrics_lc_reading_resp_tag   11
#define PelobufBikeMetrics_lc_data_req_tag       12
#define PelobufBikeMetrics_lc_data_resp_tag      13
#define PelobufBikeMetrics_stepper_data_req_tag  14
#define PelobufBikeMetrics_stepper_data_resp_tag 15
#define PelobufBikeMetrics_resistance_data_req_tag 16
#define PelobufBikeMetrics_resistance_data_resp_tag 17
#define PelobufBikeMetrics_encoder_data_req_tag  18
#define PelobufBikeMetrics_encoder_data_resp_tag 19

/* Struct field encoding specification for nanopb */
#define PelobufBikeMetrics_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,workout_data_req,id.workout_data_req),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,workout_data_resp,id.workout_data_resp),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,rpm_req,id.rpm_req),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,rpm_resp,id.rpm_resp),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,resistance_req,id.resistance_req),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,resistance_resp,id.resistance_resp),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,power_req,id.power_req),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,power_resp,id.power_resp),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,lc_reading_req,id.lc_reading_req),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,lc_reading_resp,id.lc_reading_resp),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,lc_data_req,id.lc_data_req),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,lc_data_resp,id.lc_data_resp),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,stepper_data_req,id.stepper_data_req),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,stepper_data_resp,id.stepper_data_resp),  15) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,resistance_data_req,id.resistance_data_req),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,resistance_data_resp,id.resistance_data_resp),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,encoder_data_req,id.encoder_data_req),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (id,encoder_data_resp,id.encoder_data_resp),  19)
#define PelobufBikeMetrics_CALLBACK NULL
#define PelobufBikeMetrics_DEFAULT NULL
#define PelobufBikeMetrics_id_workout_data_req_MSGTYPE WorkoutDataRequest
#define PelobufBikeMetrics_id_workout_data_resp_MSGTYPE WorkoutDataResponse
#define PelobufBikeMetrics_id_rpm_req_MSGTYPE RpmRequest
#define PelobufBikeMetrics_id_rpm_resp_MSGTYPE RpmResponse
#define PelobufBikeMetrics_id_resistance_req_MSGTYPE ResistanceRequest
#define PelobufBikeMetrics_id_resistance_resp_MSGTYPE ResistanceResponse
#define PelobufBikeMetrics_id_power_req_MSGTYPE PowerRequest
#define PelobufBikeMetrics_id_power_resp_MSGTYPE PowerResponse
#define PelobufBikeMetrics_id_lc_reading_req_MSGTYPE LoadCellReadingRequest
#define PelobufBikeMetrics_id_lc_reading_resp_MSGTYPE LoadCellReadingResponse
#define PelobufBikeMetrics_id_lc_data_req_MSGTYPE LoadCellDataRequest
#define PelobufBikeMetrics_id_lc_data_resp_MSGTYPE LoadCellDataResponse
#define PelobufBikeMetrics_id_stepper_data_req_MSGTYPE StepperMotorDataRequest
#define PelobufBikeMetrics_id_stepper_data_resp_MSGTYPE StepperMotorDataResponse
#define PelobufBikeMetrics_id_resistance_data_req_MSGTYPE ResistanceDataRequest
#define PelobufBikeMetrics_id_resistance_data_resp_MSGTYPE ResistanceDataResponse
#define PelobufBikeMetrics_id_encoder_data_req_MSGTYPE EncoderDataRequest
#define PelobufBikeMetrics_id_encoder_data_resp_MSGTYPE EncoderDataResponse

#define WorkoutDataRequest_FIELDLIST(X, a) \

#define WorkoutDataRequest_CALLBACK NULL
#define WorkoutDataRequest_DEFAULT NULL

#define WorkoutDataResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  rpm,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  resistance,        2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  power,             3)
#define WorkoutDataResponse_CALLBACK NULL
#define WorkoutDataResponse_DEFAULT NULL
#define WorkoutDataResponse_rpm_MSGTYPE RpmResponse
#define WorkoutDataResponse_resistance_MSGTYPE ResistanceResponse
#define WorkoutDataResponse_power_MSGTYPE PowerResponse

#define RpmRequest_FIELDLIST(X, a) \

#define RpmRequest_CALLBACK NULL
#define RpmRequest_DEFAULT NULL

#define RpmResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   rpm,               1) \
X(a, STATIC,   OPTIONAL, UENUM,    direction,         2)
#define RpmResponse_CALLBACK NULL
#define RpmResponse_DEFAULT (const pb_byte_t*)"\x10\x01\x00"

#define ResistanceRequest_FIELDLIST(X, a) \

#define ResistanceRequest_CALLBACK NULL
#define ResistanceRequest_DEFAULT NULL

#define ResistanceResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   current,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   target,            2)
#define ResistanceResponse_CALLBACK NULL
#define ResistanceResponse_DEFAULT NULL

#define PowerRequest_FIELDLIST(X, a) \

#define PowerRequest_CALLBACK NULL
#define PowerRequest_DEFAULT NULL

#define PowerResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   current,           1)
#define PowerResponse_CALLBACK NULL
#define PowerResponse_DEFAULT NULL

#define LoadCellReadingRequest_FIELDLIST(X, a) \

#define LoadCellReadingRequest_CALLBACK NULL
#define LoadCellReadingRequest_DEFAULT NULL

#define LoadCellReadingResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    filtered_val,      1) \
X(a, STATIC,   OPTIONAL, BOOL,     table_valid,       2)
#define LoadCellReadingResponse_CALLBACK NULL
#define LoadCellReadingResponse_DEFAULT NULL

#define LoadCellDataRequest_FIELDLIST(X, a) \

#define LoadCellDataRequest_CALLBACK NULL
#define LoadCellDataRequest_DEFAULT NULL

#define LoadCellDataResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     valid,             1) \
X(a, STATIC,   REPEATED, FLOAT,    data,              2) \
X(a, STATIC,   OPTIONAL, FLOAT,    offset,            3) \
X(a, STATIC,   OPTIONAL, UINT32,   zero_data,         4) \
X(a, STATIC,   OPTIONAL, UINT32,   cal_span,          5)
#define LoadCellDataResponse_CALLBACK NULL
#define LoadCellDataResponse_DEFAULT NULL

#define StepperMotorDataRequest_FIELDLIST(X, a) \

#define StepperMotorDataRequest_CALLBACK NULL
#define StepperMotorDataRequest_DEFAULT NULL

#define StepperMotorDataResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   abs_pos,           1) \
X(a, STATIC,   OPTIONAL, UINT32,   start,             2) \
X(a, STATIC,   OPTIONAL, UINT32,   end,               3) \
X(a, STATIC,   OPTIONAL, UINT32,   stall_threshold,   4)
#define StepperMotorDataResponse_CALLBACK NULL
#define StepperMotorDataResponse_DEFAULT NULL

#define ResistanceDataRequest_FIELDLIST(X, a) \

#define ResistanceDataRequest_CALLBACK NULL
#define ResistanceDataRequest_DEFAULT NULL

#define ResistanceDataResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    offset,            1) \
X(a, STATIC,   OPTIONAL, INT32,    position_offset,   2) \
X(a, STATIC,   OPTIONAL, UINT32,   v1_eqivalent,      3)
#define ResistanceDataResponse_CALLBACK NULL
#define ResistanceDataResponse_DEFAULT NULL

#define EncoderDataRequest_FIELDLIST(X, a) \

#define EncoderDataRequest_CALLBACK NULL
#define EncoderDataRequest_DEFAULT NULL

#define EncoderDataResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   angle,             1) \
X(a, STATIC,   OPTIONAL, INT32,    applied_position_offset,   2)
#define EncoderDataResponse_CALLBACK NULL
#define EncoderDataResponse_DEFAULT NULL

extern const pb_msgdesc_t PelobufBikeMetrics_msg;
extern const pb_msgdesc_t WorkoutDataRequest_msg;
extern const pb_msgdesc_t WorkoutDataResponse_msg;
extern const pb_msgdesc_t RpmRequest_msg;
extern const pb_msgdesc_t RpmResponse_msg;
extern const pb_msgdesc_t ResistanceRequest_msg;
extern const pb_msgdesc_t ResistanceResponse_msg;
extern const pb_msgdesc_t PowerRequest_msg;
extern const pb_msgdesc_t PowerResponse_msg;
extern const pb_msgdesc_t LoadCellReadingRequest_msg;
extern const pb_msgdesc_t LoadCellReadingResponse_msg;
extern const pb_msgdesc_t LoadCellDataRequest_msg;
extern const pb_msgdesc_t LoadCellDataResponse_msg;
extern const pb_msgdesc_t StepperMotorDataRequest_msg;
extern const pb_msgdesc_t StepperMotorDataResponse_msg;
extern const pb_msgdesc_t ResistanceDataRequest_msg;
extern const pb_msgdesc_t ResistanceDataResponse_msg;
extern const pb_msgdesc_t EncoderDataRequest_msg;
extern const pb_msgdesc_t EncoderDataResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PelobufBikeMetrics_fields &PelobufBikeMetrics_msg
#define WorkoutDataRequest_fields &WorkoutDataRequest_msg
#define WorkoutDataResponse_fields &WorkoutDataResponse_msg
#define RpmRequest_fields &RpmRequest_msg
#define RpmResponse_fields &RpmResponse_msg
#define ResistanceRequest_fields &ResistanceRequest_msg
#define ResistanceResponse_fields &ResistanceResponse_msg
#define PowerRequest_fields &PowerRequest_msg
#define PowerResponse_fields &PowerResponse_msg
#define LoadCellReadingRequest_fields &LoadCellReadingRequest_msg
#define LoadCellReadingResponse_fields &LoadCellReadingResponse_msg
#define LoadCellDataRequest_fields &LoadCellDataRequest_msg
#define LoadCellDataResponse_fields &LoadCellDataResponse_msg
#define StepperMotorDataRequest_fields &StepperMotorDataRequest_msg
#define StepperMotorDataResponse_fields &StepperMotorDataResponse_msg
#define ResistanceDataRequest_fields &ResistanceDataRequest_msg
#define ResistanceDataResponse_fields &ResistanceDataResponse_msg
#define EncoderDataRequest_fields &EncoderDataRequest_msg
#define EncoderDataResponse_fields &EncoderDataResponse_msg

/* Maximum encoded size of messages (where known) */
#define EncoderDataRequest_size                  0
#define EncoderDataResponse_size                 17
#define LoadCellDataRequest_size                 0
#define LoadCellDataResponse_size                69
#define LoadCellReadingRequest_size              0
#define LoadCellReadingResponse_size             13
#define PelobufBikeMetrics_size                  71
#define PowerRequest_size                        0
#define PowerResponse_size                       6
#define ResistanceDataRequest_size               0
#define ResistanceDataResponse_size              22
#define ResistanceRequest_size                   0
#define ResistanceResponse_size                  12
#define RpmRequest_size                          0
#define RpmResponse_size                         8
#define StepperMotorDataRequest_size             0
#define StepperMotorDataResponse_size            24
#define WorkoutDataRequest_size                  0
#define WorkoutDataResponse_size                 32

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
