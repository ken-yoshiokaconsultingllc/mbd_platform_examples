/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PELOBUF_PB_H_INCLUDED
#define PB_PELOBUF_PB_H_INCLUDED
#include <pb.h>
#include "pelobuf_info.pb.h"
#include "pelobuf_bike_metrics.pb.h"
#include "pelobuf_settings.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _PelobufMessage { 
    pb_size_t which_top;
    union {
        PelobufInfo info;
        PelobufBikeMetrics bike_data;
        PelobufSettings settings;
    } top; 
    bool has_error_code;
    uint32_t error_code; 
} PelobufMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define PelobufMessage_init_default              {0, {PelobufInfo_init_default}, false, 0}
#define PelobufMessage_init_zero                 {0, {PelobufInfo_init_zero}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PelobufMessage_info_tag                  1
#define PelobufMessage_bike_data_tag             2
#define PelobufMessage_settings_tag              3
#define PelobufMessage_error_code_tag            127

/* Struct field encoding specification for nanopb */
#define PelobufMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (top,info,top.info),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (top,bike_data,top.bike_data),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (top,settings,top.settings),   3) \
X(a, STATIC,   OPTIONAL, UINT32,   error_code,      127)
#define PelobufMessage_CALLBACK NULL
#define PelobufMessage_DEFAULT NULL
#define PelobufMessage_top_info_MSGTYPE PelobufInfo
#define PelobufMessage_top_bike_data_MSGTYPE PelobufBikeMetrics
#define PelobufMessage_top_settings_MSGTYPE PelobufSettings

extern const pb_msgdesc_t PelobufMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PelobufMessage_fields &PelobufMessage_msg

/* Maximum encoded size of messages (where known) */
#if defined(PelobufInfo_size) && defined(PelobufBikeMetrics_size) && defined(PelobufSettings_size)
#define PelobufMessage_size                      (7 + sizeof(union PelobufMessage_top_size_union))
union PelobufMessage_top_size_union {char f1[(6 + PelobufInfo_size)]; char f2[(6 + PelobufBikeMetrics_size)]; char f3[(6 + PelobufSettings_size)];};
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
